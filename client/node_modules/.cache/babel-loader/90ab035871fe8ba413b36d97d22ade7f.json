{"ast":null,"code":"import _classCallCheck from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject as _addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nvar TextForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextForm, _Component);\n\n  function TextForm() {\n    var _this;\n\n    _classCallCheck(this, TextForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextForm).call(this));\n\n    _this.handleOnSubmit = function (event) {\n      var project = _this.state;\n      event.preventDefault();\n      var _this$props = _this.props,\n          addProject = _this$props.addProject,\n          history = _this$props.history;\n\n      _this.toneAnalyzer(project).then(function (result) {\n        return console.log(result);\n      }); // addProject(project)\n      // history.push('/result')\n\n    };\n\n    _this.handleOnChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.state = {\n      text: '',\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(TextForm, [{\n    key: \"updateProject\",\n    value: function updateProject(result) {\n      this.setState({\n        result: result\n      });\n    }\n  }, {\n    key: \"toneAnalyzer\",\n    value: function toneAnalyzer(project) {\n      var self = this;\n      var toneUsername = \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n      var tonePassword = \"THTqBjmyU6k4\";\n      var toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n      var data = {};\n      data.text = project.text;\n\n      var request = require(\"request\");\n\n      var getResult = function getResult(toneUrl) {\n        return new Promise(function (resolve, reject) {\n          request.post({\n            url: toneUrl,\n            json: data,\n            auth: {\n              user: toneUsername,\n              pass: tonePassword\n            }\n          }, function (err, res, data) {\n            if (error) reject(error);\n            var result = JSON.parse(data);\n            resolve(result);\n          });\n        } // closing Promise\n        ); // end of getResult\n      }; // end of toneAnalyzer\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        style: {\n          marginTop: '16px'\n        },\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"text\",\n        cols: \"40\",\n        rows: \"5\",\n        onChange: this.handleOnChange,\n        placeholder: \"Paste text here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextForm;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch(_addProject(project));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TextForm);","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js"],"names":["React","Component","connect","addProject","toneAnalyzer","TextForm","handleOnSubmit","event","project","state","preventDefault","props","history","then","result","console","log","handleOnChange","setState","text","target","value","self","toneUsername","tonePassword","toneUrl","data","request","require","getResult","Promise","resolve","reject","post","url","json","auth","user","pass","err","res","error","JSON","parse","marginTop","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nclass TextForm extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      text: '',\n      result: ''\n    };\n  }\n\n  updateProject(result) {\n    this.setState({result: result});\n  }\n\n\n  toneAnalyzer(project) {\n    let self = this;\n    let toneUsername= \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n    let tonePassword= \"THTqBjmyU6k4\";\n    let toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n    let data = {};\n    data.text = project.text\n    let request = require(\"request\");\n\n    let getResult = (toneUrl) => {\n      return new Promise(\n        (resolve, reject) => {\n         request.post(\n           {\n             url: toneUrl,\n             json: data,\n             auth: {\n               user: toneUsername,\n               pass: tonePassword\n             }\n           }, function(err, res, data) {\n                if (error) reject(error);\n\n                let result = JSON.parse(data);\n                resolve(result)\n              }\n\n          )\n        }\n          // closing Promise\n      );\n      // end of getResult\n    };\n    // end of toneAnalyzer\n  }\n\n  handleOnSubmit = event => {\n    let project = this.state;\n    event.preventDefault();\n    const { addProject, history } = this.props;\n    this.toneAnalyzer(project).then(result => console.log(result))\n    // addProject(project)\n    // history.push('/result')\n  }\n\n  handleOnChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  render(){\n    return (\n      <form style={{ marginTop: '16px' }} onSubmit={this.handleOnSubmit} >\n        <textarea name=\"text\" cols=\"40\" rows=\"5\"\n          onChange={this.handleOnChange}\n          placeholder=\"Paste text here\">\n        </textarea>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  };\n};\n\n\nexport default connect(null, mapDispatchToProps)(TextForm)\n"]},"metadata":{},"sourceType":"module"}