{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject as _addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nvar TextForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextForm, _Component);\n\n  function TextForm() {\n    var _this;\n\n    _classCallCheck(this, TextForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextForm).call(this));\n\n    _this.getResult = function (project) {\n      var toneUsername = \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n      var tonePassword = \"THTqBjmyU6k4\";\n      var toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n      var data = {};\n      data.text = project.text;\n\n      var request = require(\"request\");\n\n      return new Promise(function (resolve, reject) {\n        request.post({\n          url: toneUrl,\n          json: data,\n          auth: {\n            user: toneUsername,\n            pass: tonePassword\n          }\n        }, function (err, res, data) {\n          if (err) reject(err);\n          resolve(data);\n        });\n      } // closing Promise\n      ); // end of getResult\n    };\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          addProject = _this$props.addProject,\n          history = _this$props.history;\n\n      _this.redirect(_this.state);\n    };\n\n    _this.handleOnChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.state = {\n      text: '',\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(TextForm, [{\n    key: \"updateProject\",\n    value: function updateProject(result) {\n      var _this2 = this;\n\n      this.setState({\n        result: result\n      });\n      return new Promise(function (resolve, reject) {\n        resolve(_this2.state);\n      });\n    }\n  }, {\n    key: \"redirect\",\n    value: function () {\n      var _redirect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(project) {\n        var _this3 = this;\n\n        var action;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getResult(project).then(function (result) {\n                  return _this3.updateProject(result);\n                }).then(function (project) {\n                  return _this3.props.addProject(project);\n                });\n\n              case 2:\n                action = _context.sent;\n                this.props.history.push(\"/projects/\".concat(action.project.id, \"/result\"));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function redirect(_x) {\n        return _redirect.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        style: {\n          marginTop: '16px'\n        },\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"text\",\n        cols: \"40\",\n        rows: \"5\",\n        onChange: this.handleOnChange,\n        placeholder: \"Paste text here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projects: state.projects\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch(_addProject(project));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextForm);","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js"],"names":["React","Component","connect","addProject","toneAnalyzer","TextForm","getResult","project","toneUsername","tonePassword","toneUrl","data","text","request","require","Promise","resolve","reject","post","url","json","auth","user","pass","err","res","handleOnSubmit","event","preventDefault","props","history","redirect","state","handleOnChange","setState","target","value","result","then","updateProject","action","push","id","marginTop","mapStateToProps","projects","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nclass TextForm extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      text: '',\n      result: ''\n    };\n  }\n\n  updateProject(result) {\n    this.setState({result: result});\n    return new Promise(\n      (resolve,reject) => {\n      resolve(this.state)\n    })\n  }\n\n  getResult = (project) => {\n      let toneUsername= \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n      let tonePassword= \"THTqBjmyU6k4\";\n      let toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n      let data = {};\n      data.text = project.text\n      let request = require(\"request\");\n\n      return new Promise(\n        (resolve, reject) => {\n         request.post(\n           {\n             url: toneUrl,\n             json: data,\n             auth: {\n               user: toneUsername,\n               pass: tonePassword\n             }\n           }, function(err, res, data) {\n                if (err) reject(err);\n\n                resolve(data);\n              })\n        }\n          // closing Promise\n      );\n      // end of getResult\n    };\n\n  async redirect(project) {\n    // wait until project is updated and added to Redux store before redirecting\n    let action = await this.getResult(project).then(result => this.updateProject(result)).then(project => this.props.addProject(project))\n    this.props.history.push(`/projects/${action.project.id}/result`)\n  }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    const { addProject, history } = this.props;\n    this.redirect(this.state)\n  }\n\n  handleOnChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  render(){\n    return (\n      <form style={{ marginTop: '16px' }} onSubmit={this.handleOnSubmit} >\n        <textarea name=\"text\" cols=\"40\" rows=\"5\"\n          onChange={this.handleOnChange}\n          placeholder=\"Paste text here\">\n        </textarea>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextForm)\n"]},"metadata":{},"sourceType":"module"}