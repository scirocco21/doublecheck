{"ast":null,"code":"import _classCallCheck from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject as _addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nvar TextForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextForm, _Component);\n\n  function TextForm() {\n    var _this;\n\n    _classCallCheck(this, TextForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextForm).call(this));\n\n    _this.handleOnSubmit = function (event) {\n      var project = _this.state;\n      var data;\n      event.preventDefault();\n      var _this$props = _this.props,\n          addProject = _this$props.addProject,\n          history = _this$props.history;\n      var promise = new Promise(function (resolve) {\n        var response = toneAnalyzer(project);\n\n        if (response) {\n          resolve(response);\n        }\n      });\n      promise.then(function (data) {\n        console.log(data.response);\n      });\n    };\n\n    _this.handleOnChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.state = {\n      text: '',\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(TextForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        style: {\n          marginTop: '16px'\n        },\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"text\",\n        cols: \"40\",\n        rows: \"5\",\n        onChange: this.handleOnChange,\n        placeholder: \"Paste text here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextForm;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch(_addProject(project));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TextForm);","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js"],"names":["React","Component","connect","addProject","toneAnalyzer","TextForm","handleOnSubmit","event","project","state","data","preventDefault","props","history","promise","Promise","resolve","response","then","console","log","handleOnChange","setState","text","target","value","result","marginTop","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,qBAA3B;AACA,SAASC,YAAT,QAA6B,YAA7B;;IAEMC,Q;;;;;AAEJ,sBAAc;AAAA;;AAAA;;AACZ;;AADY,UASdC,cATc,GASG,UAAAC,KAAK,EAAI;AACxB,UAAIC,OAAO,GAAG,MAAKC,KAAnB;AACA,UAAIC,IAAJ;AACAH,MAAAA,KAAK,CAACI,cAAN;AAHwB,wBAIQ,MAAKC,KAJb;AAAA,UAIhBT,UAJgB,eAIhBA,UAJgB;AAAA,UAIJU,OAJI,eAIJA,OAJI;AAMxB,UAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAa;AACtC,YAAIC,QAAQ,GAAGb,YAAY,CAACI,OAAD,CAA3B;;AACA,YAAIS,QAAJ,EAAc;AACZD,UAAAA,OAAO,CAACC,QAAD,CAAP;AACD;AACA,OALW,CAAd;AAMAH,MAAAA,OAAO,CAACI,IAAR,CAAc,UAAAR,IAAI,EAAI;AACpBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACO,QAAjB;AACD,OAFD;AAGD,KAxBa;;AAAA,UA0BdI,cA1Bc,GA0BG,UAAAd,KAAK,EAAI;AACxB,YAAKe,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEhB,KAAK,CAACiB,MAAN,CAAaC;AADP,OAAd;AAGD,KA9Ba;;AAGZ,UAAKhB,KAAL,GAAa;AACXc,MAAAA,IAAI,EAAE,EADK;AAEXG,MAAAA,MAAM,EAAE;AAFG,KAAb;AAHY;AAOb;;;;6BAyBO;AACN,aACE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAoC,QAAA,QAAQ,EAAE,KAAKrB,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,IAAI,EAAC,GAArC;AACE,QAAA,QAAQ,EAAE,KAAKe,cADjB;AAEE,QAAA,WAAW,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EA5CoBpB,S;;AA+CvB,IAAM2B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACL1B,IAAAA,UAAU,EAAE,oBAACK,OAAD;AAAA,aAAaqB,QAAQ,CAAC1B,WAAU,CAACK,OAAD,CAAX,CAArB;AAAA;AADP,GAAP;AAGD,CAJD;;AAOA,eAAeN,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCvB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nclass TextForm extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      text: '',\n      result: ''\n    };\n  }\n\n  handleOnSubmit = event => {\n    let project = this.state;\n    let data;\n    event.preventDefault();\n    const { addProject, history } = this.props;\n\n    let promise = new Promise( (resolve) => {\n      let response = toneAnalyzer(project);\n      if (response) {\n        resolve(response)\n      }\n      });\n    promise.then( data => {\n      console.log(data.response);\n    });\n  }\n\n  handleOnChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  render(){\n    return (\n      <form style={{ marginTop: '16px' }} onSubmit={this.handleOnSubmit} >\n        <textarea name=\"text\" cols=\"40\" rows=\"5\"\n          onChange={this.handleOnChange}\n          placeholder=\"Paste text here\">\n        </textarea>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  };\n};\n\n\nexport default connect(null, mapDispatchToProps)(TextForm)\n"]},"metadata":{},"sourceType":"module"}