{"ast":null,"code":"import _classCallCheck from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject as _addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nvar TextForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextForm, _Component);\n\n  function TextForm() {\n    var _this;\n\n    _classCallCheck(this, TextForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextForm).call(this));\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          addProject = _this$props.addProject,\n          history = _this$props.history;\n      toneAnalyzer(_this.state).then(function (response) {\n        return _this.setState({\n          result: response\n        });\n      }).then(addProject(_this.state)).then(history.push('/result'));\n    };\n\n    _this.handleOnChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.state = {\n      text: '',\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(TextForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        style: {\n          marginTop: '16px'\n        },\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"text\",\n        cols: \"40\",\n        rows: \"5\",\n        onChange: this.handleOnChange,\n        placeholder: \"Paste text here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextForm;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch(_addProject(project));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TextForm);","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js"],"names":["React","Component","connect","addProject","toneAnalyzer","TextForm","handleOnSubmit","event","preventDefault","props","history","state","then","response","setState","result","push","handleOnChange","text","target","value","marginTop","mapDispatchToProps","dispatch","project"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,qBAA3B;AACA,SAASC,YAAT,QAA6B,YAA7B;;IAEMC,Q;;;;;AAEJ,sBAAc;AAAA;;AAAA;;AACZ;;AADY,UASdC,cATc,GASG,UAAAC,KAAK,EAAI;AACxBA,MAAAA,KAAK,CAACC,cAAN;AADwB,wBAEQ,MAAKC,KAFb;AAAA,UAEhBN,UAFgB,eAEhBA,UAFgB;AAAA,UAEJO,OAFI,eAEJA,OAFI;AAGxBN,MAAAA,YAAY,CAAC,MAAKO,KAAN,CAAZ,CAAyBC,IAAzB,CAA8B,UAAAC,QAAQ;AAAA,eAAI,MAAKC,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAEF;AAAT,SAAd,CAAJ;AAAA,OAAtC,EAA6ED,IAA7E,CAAkFT,UAAU,CAAC,MAAKQ,KAAN,CAA5F,EAA0GC,IAA1G,CACAF,OAAO,CAACM,IAAR,CAAa,SAAb,CADA;AAED,KAda;;AAAA,UAgBdC,cAhBc,GAgBG,UAAAV,KAAK,EAAI;AACxB,YAAKO,QAAL,CAAc;AACZI,QAAAA,IAAI,EAAEX,KAAK,CAACY,MAAN,CAAaC;AADP,OAAd;AAGD,KApBa;;AAGZ,UAAKT,KAAL,GAAa;AACXO,MAAAA,IAAI,EAAE,EADK;AAEXH,MAAAA,MAAM,EAAE;AAFG,KAAb;AAHY;AAOb;;;;6BAeO;AACN,aACE;AAAM,QAAA,KAAK,EAAE;AAAEM,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAoC,QAAA,QAAQ,EAAE,KAAKf,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,IAAI,EAAC,GAArC;AACE,QAAA,QAAQ,EAAE,KAAKW,cADjB;AAEE,QAAA,WAAW,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EAlCoBhB,S;;AAqCvB,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLpB,IAAAA,UAAU,EAAE,oBAACqB,OAAD;AAAA,aAAaD,QAAQ,CAACpB,WAAU,CAACqB,OAAD,CAAX,CAArB;AAAA;AADP,GAAP;AAGD,CAJD;;AAOA,eAAetB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nclass TextForm extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      text: '',\n      result: ''\n    };\n  }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    const { addProject, history } = this.props;\n    toneAnalyzer(this.state).then(response => this.setState({result: response})).then(addProject(this.state)).then(\n    history.push('/result'))\n  }\n\n  handleOnChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  render(){\n    return (\n      <form style={{ marginTop: '16px' }} onSubmit={this.handleOnSubmit} >\n        <textarea name=\"text\" cols=\"40\" rows=\"5\"\n          onChange={this.handleOnChange}\n          placeholder=\"Paste text here\">\n        </textarea>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  };\n};\n\n\nexport default connect(null, mapDispatchToProps)(TextForm)\n"]},"metadata":{},"sourceType":"module"}