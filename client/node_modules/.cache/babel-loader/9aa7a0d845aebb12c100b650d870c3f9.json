{"ast":null,"code":"export function toneAnalyzer(project) {\n  return new Promise(function (resolve) {\n    var toneUsername = \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n    var tonePassword = \"THTqBjmyU6k4\";\n    var toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n    var data = {};\n    data.text = project.text;\n\n    var request = require(\"request\");\n\n    var req = request.post({\n      url: toneUrl,\n      json: data,\n      auth: {\n        user: toneUsername,\n        pass: tonePassword\n      }\n    }, function (err, res, body) {\n      return body;\n    });\n\n    if (req.status == 200) {\n      resolve(req.response);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/tone.js"],"names":["toneAnalyzer","project","Promise","resolve","toneUsername","tonePassword","toneUrl","data","text","request","require","req","post","url","json","auth","user","pass","err","res","body","status","response"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AACnC,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AAEpC,QAAIC,YAAY,GAAE,sCAAlB;AACA,QAAIC,YAAY,GAAE,cAAlB;AACA,QAAIC,OAAO,GAAG,iFAAd;AACA,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACC,IAAL,GAAYP,OAAO,CAACO,IAApB;;AACA,QAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,QAAIC,GAAG,GAAGF,OAAO,CAACG,IAAR,CACR;AACAC,MAAAA,GAAG,EAAEP,OADL;AAEAQ,MAAAA,IAAI,EAAEP,IAFN;AAGAQ,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAEZ,YADJ;AAEFa,QAAAA,IAAI,EAAEZ;AAFJ;AAHN,KADQ,EAQL,UAASa,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC1B,aAAOA,IAAP;AACD,KAVO,CAAV;;AAYA,QAAIT,GAAG,CAACU,MAAJ,IAAc,GAAlB,EAAuB;AACrBlB,MAAAA,OAAO,CAACQ,GAAG,CAACW,QAAL,CAAP;AACD;AACF,GAxBO,CAAP;AAyBF","sourcesContent":["export function toneAnalyzer(project) {\n   return new Promise(function(resolve) {\n\n    let toneUsername= \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n    let tonePassword= \"THTqBjmyU6k4\";\n    let toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n    let data = {};\n    data.text = project.text\n    let request = require(\"request\");\n\n    let req = request.post(\n      {\n      url: toneUrl,\n      json: data,\n      auth: {\n          user: toneUsername,\n          pass: tonePassword\n      }\n      }, function(err, res, body) {\n        return body;\n      }\n    )\n    if (req.status == 200) {\n      resolve(req.response)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}