{"ast":null,"code":"import _classCallCheck from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/src/Components/Result.js\";\nimport React, { Component } from 'react';\nimport Emoji from './Emoji.js';\nimport { symbolMap } from '../emojis.js';\nimport { Card, CardImg, CardFooter, CardImgOverlay, Popover, PopoverHeader, PopoverBody, Button } from 'reactstrap';\nimport '../stylesheets/Result.css';\n\nvar Result =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Result, _Component);\n\n  function Result(props) {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Result).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      popoverOpen: false,\n      project: props.project\n    };\n    return _this;\n  }\n\n  _createClass(Result, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"cardTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.project.title)), React.createElement(Card, {\n        body: true,\n        inverse: true,\n        className: \"card text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        className: \"cardImage\",\n        src: require(\"../images/\" + this.props.project.img),\n        alt: \"Card image cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(CardImgOverlay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Your Passage\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.project.text))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Summary\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.project.tones.map(function (tone, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, tone.tone_name, \" \"), React.createElement(Emoji, {\n          symbol: symbolMap(tone),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \" Score: \", tone.score));\n      }))), React.createElement(Button, {\n        className: \"btn-sm\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"View Detailed Analysis\"))));\n    }\n  }]);\n\n  return Result;\n}(Component);\n\nexport default Result;","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck-react-app/client/src/Components/Result.js"],"names":["React","Component","Emoji","symbolMap","Card","CardImg","CardFooter","CardImgOverlay","Popover","PopoverHeader","PopoverBody","Button","Result","props","toggle","bind","state","popoverOpen","project","setState","title","require","img","text","tones","map","tone","index","tone_name","score"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Emoji from './Emoji.js'\nimport { symbolMap } from '../emojis.js';\nimport { Card, CardImg, CardFooter, CardImgOverlay,  Popover, PopoverHeader, PopoverBody, Button } from 'reactstrap';\nimport '../stylesheets/Result.css'\n\nclass Result extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      popoverOpen: false,\n      project: props.project\n    };\n  }\n\n  toggle() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"App-header\">\n        <h2 className='cardTitle'><em>{this.props.project.title}</em></h2>\n          <Card body inverse className=\"card text-center\">\n            <CardImg className=\"cardImage\" src={require(\"../images/\" + this.props.project.img)} alt=\"Card image cap\" />\n            <CardImgOverlay>\n            <div className=\"text\">\n              <h3>Your Passage</h3>\n                <hr/>\n              <h4>{this.props.project.text}</h4>\n            </div>\n          </CardImgOverlay>\n          <CardFooter>\n           <div className=\"summary\">\n              <h3>Summary</h3>\n                <hr/>\n              <ul>\n              {this.props.project.tones.map((tone, index) =>\n                <li key={index}>\n                  <em>{tone.tone_name} </em>\n                  <Emoji symbol={symbolMap(tone)} />\n                  <p> Score: {tone.score}</p>\n                </li>)}\n              </ul>\n            </div>\n            <Button className=\"btn-sm\" onClick={this.toggle}>\n              View Detailed Analysis\n            </Button>\n            {/* <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.toggle}>\n            {this.props.project.sentences.map((sentence, index) =>\n              <div key={index}>\n                <PopoverHeader>{sentence.text}</PopoverHeader>\n                  <PopoverBody>\n                    <ul key={index}>{sentence.tones.map((tone, index) =>\n                      <li key={index}>\n                        <em>{tone.tone_name}</em>\n                        <Emoji symbol={symbolMap(tone)} />\n                        <p>Score: {tone.score}</p>\n                      </li>\n                      )}\n                    </ul>\n                  </PopoverBody>\n                </div>\n              )}\n              </Popover> */}\n          </CardFooter>\n        </Card>\n      </div>\n     )\n   }\n}\n\nexport default Result\n"]},"metadata":{},"sourceType":"module"}