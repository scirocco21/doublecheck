{"ast":null,"code":"import _classCallCheck from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject as _addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nvar TextForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextForm, _Component);\n\n  function TextForm() {\n    var _this;\n\n    _classCallCheck(this, TextForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextForm).call(this));\n\n    _this.getResult = function (project) {\n      var toneUsername = \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n      var tonePassword = \"THTqBjmyU6k4\";\n      var toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n      var data = {};\n      data.text = project.text;\n\n      var request = require(\"request\");\n\n      return new Promise(function (resolve, reject) {\n        request.post({\n          url: toneUrl,\n          json: data,\n          auth: {\n            user: toneUsername,\n            pass: tonePassword\n          }\n        }, function (err, res, data) {\n          if (err) reject(err);\n          var result = JSON.parse(data);\n          resolve(result);\n        });\n      } // closing Promise\n      ); // end of getResult\n    };\n\n    _this.handleOnSubmit = function (event) {\n      var project = _this.state;\n      event.preventDefault();\n      var _this$props = _this.props,\n          addProject = _this$props.addProject,\n          history = _this$props.history;\n      console.log(project);\n\n      _this.getResult(project).then(function (result) {\n        return console.log(result);\n      }); // addProject(project)\n      // history.push('/result')\n\n    };\n\n    _this.handleOnChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.state = {\n      text: '',\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(TextForm, [{\n    key: \"updateProject\",\n    value: function updateProject(result) {\n      this.setState({\n        result: result\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        style: {\n          marginTop: '16px'\n        },\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"text\",\n        cols: \"40\",\n        rows: \"5\",\n        onChange: this.handleOnChange,\n        placeholder: \"Paste text here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextForm;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch(_addProject(project));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TextForm);","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Containers/TextForm.js"],"names":["React","Component","connect","addProject","toneAnalyzer","TextForm","getResult","project","toneUsername","tonePassword","toneUrl","data","text","request","require","Promise","resolve","reject","post","url","json","auth","user","pass","err","res","result","JSON","parse","handleOnSubmit","event","state","preventDefault","props","history","console","log","then","handleOnChange","setState","target","value","marginTop","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,qBAA3B;AACA,SAASC,YAAT,QAA6B,YAA7B;;IAEMC,Q;;;;;AAEJ,sBAAc;AAAA;;AAAA;;AACZ;;AADY,UAadC,SAbc,GAaF,UAACC,OAAD,EAAa;AACrB,UAAIC,YAAY,GAAE,sCAAlB;AACA,UAAIC,YAAY,GAAE,cAAlB;AACA,UAAIC,OAAO,GAAG,iFAAd;AACA,UAAIC,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAACC,IAAL,GAAYL,OAAO,CAACK,IAApB;;AACA,UAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,aAAO,IAAIC,OAAJ,CACL,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpBJ,QAAAA,OAAO,CAACK,IAAR,CACE;AACEC,UAAAA,GAAG,EAAET,OADP;AAEEU,UAAAA,IAAI,EAAET,IAFR;AAGEU,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAEd,YADF;AAEJe,YAAAA,IAAI,EAAEd;AAFF;AAHR,SADF,EAQK,UAASe,GAAT,EAAcC,GAAd,EAAmBd,IAAnB,EAAyB;AACvB,cAAIa,GAAJ,EAASP,MAAM,CAACO,GAAD,CAAN;AAET,cAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWjB,IAAX,CAAb;AACAK,UAAAA,OAAO,CAACU,MAAD,CAAP;AACD,SAbN;AAcA,OAhBI,CAiBH;AAjBG,OAAP,CARqB,CA2BrB;AACD,KAzCW;;AAAA,UA2CdG,cA3Cc,GA2CG,UAAAC,KAAK,EAAI;AACxB,UAAIvB,OAAO,GAAG,MAAKwB,KAAnB;AACAD,MAAAA,KAAK,CAACE,cAAN;AAFwB,wBAGQ,MAAKC,KAHb;AAAA,UAGhB9B,UAHgB,eAGhBA,UAHgB;AAAA,UAGJ+B,OAHI,eAGJA,OAHI;AAIxBC,MAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ;;AACA,YAAKD,SAAL,CAAeC,OAAf,EAAwB8B,IAAxB,CAA6B,UAAAX,MAAM;AAAA,eAAIS,OAAO,CAACC,GAAR,CAAYV,MAAZ,CAAJ;AAAA,OAAnC,EALwB,CAMxB;AACA;;AACD,KAnDa;;AAAA,UAqDdY,cArDc,GAqDG,UAAAR,KAAK,EAAI;AACxB,YAAKS,QAAL,CAAc;AACZ3B,QAAAA,IAAI,EAAEkB,KAAK,CAACU,MAAN,CAAaC;AADP,OAAd;AAGD,KAzDa;;AAGZ,UAAKV,KAAL,GAAa;AACXnB,MAAAA,IAAI,EAAE,EADK;AAEXc,MAAAA,MAAM,EAAE;AAFG,KAAb;AAHY;AAOb;;;;kCAEaA,M,EAAQ;AACpB,WAAKa,QAAL,CAAc;AAACb,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACD;;;6BAgDO;AACN,aACE;AAAM,QAAA,KAAK,EAAE;AAAEgB,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAoC,QAAA,QAAQ,EAAE,KAAKb,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,IAAI,EAAC,GAArC;AACE,QAAA,QAAQ,EAAE,KAAKS,cADjB;AAEE,QAAA,WAAW,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EAvEoBrC,S;;AA0EvB,IAAM0C,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLzC,IAAAA,UAAU,EAAE,oBAACI,OAAD;AAAA,aAAaqC,QAAQ,CAACzC,WAAU,CAACI,OAAD,CAAX,CAArB;AAAA;AADP,GAAP;AAGD,CAJD;;AAOA,eAAeL,OAAO,CAAC,IAAD,EAAOyC,kBAAP,CAAP,CAAkCtC,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\n\nclass TextForm extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      text: '',\n      result: ''\n    };\n  }\n\n  updateProject(result) {\n    this.setState({result: result});\n  }\n\n  getResult = (project) => {\n      let toneUsername= \"5be14bed-d818-4bd1-b4ca-e8b09dcc73b8\";\n      let tonePassword= \"THTqBjmyU6k4\";\n      let toneUrl = \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21\";\n      let data = {};\n      data.text = project.text\n      let request = require(\"request\");\n\n      return new Promise(\n        (resolve, reject) => {\n         request.post(\n           {\n             url: toneUrl,\n             json: data,\n             auth: {\n               user: toneUsername,\n               pass: tonePassword\n             }\n           }, function(err, res, data) {\n                if (err) reject(err);\n\n                let result = JSON.parse(data);\n                resolve(result);\n              })\n        }\n          // closing Promise\n      );\n      // end of getResult\n    };\n\n  handleOnSubmit = event => {\n    let project = this.state;\n    event.preventDefault();\n    const { addProject, history } = this.props;\n    console.log(project)\n    this.getResult(project).then(result => console.log(result))\n    // addProject(project)\n    // history.push('/result')\n  }\n\n  handleOnChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  render(){\n    return (\n      <form style={{ marginTop: '16px' }} onSubmit={this.handleOnSubmit} >\n        <textarea name=\"text\" cols=\"40\" rows=\"5\"\n          onChange={this.handleOnChange}\n          placeholder=\"Paste text here\">\n        </textarea>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  };\n};\n\n\nexport default connect(null, mapDispatchToProps)(TextForm)\n"]},"metadata":{},"sourceType":"module"}