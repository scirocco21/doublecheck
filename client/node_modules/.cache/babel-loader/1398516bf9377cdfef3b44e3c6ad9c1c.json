{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Components/Result.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar Result = function Result(_ref) {\n  var project = _ref.project;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Results\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Passage: \", project.text), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Summary\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, project.result.document_tone.tones.map(function (tone) {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, tone.tone_name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \" Score: \", tone.score));\n  })), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Detailed Analysis\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, project.result.sentences_tone.map(function (sentence) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Sentence \", sentence.sentence_id + 1, \": \", sentence.text)), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, sentence.tones.map(function (tone) {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, tone.tone_name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Score: \", tone.score));\n    })));\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var project = state.projects.find(function (project) {\n    return project.id === +ownProps.match.params.projectId;\n  });\n\n  if (project) {\n    return {\n      project: project\n    };\n  } else {\n    return {\n      project: {}\n    };\n  }\n};\n\nexport default connect(mapStateToProps)(Result);","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Components/Result.js"],"names":["React","Component","connect","Result","project","text","result","document_tone","tones","map","tone","tone_name","score","sentences_tone","sentence","sentence_id","mapStateToProps","state","ownProps","projects","find","id","match","params","projectId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,OAAO,CAACC,IAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,MAAR,CAAeC,aAAf,CAA6BC,KAA7B,CAAmCC,GAAnC,CAAuC,UAAAC,IAAI;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,SAAV,CAAJ,EAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYD,IAAI,CAACE,KAAjB,CAA7B,CAAJ;AAAA,GAA3C,CADH,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,CAACE,MAAR,CAAeO,cAAf,CAA8BJ,GAA9B,CACC,UAAAK,QAAQ;AAAA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcA,QAAQ,CAACC,WAAT,GAAuB,CAArC,QAA0CD,QAAQ,CAACT,IAAnD,CAAJ,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKS,QAAQ,CAACN,KAAT,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,aAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACC,SAAV,CAAJ,EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWD,IAAI,CAACE,KAAhB,CADF,CAD0B;AAAA,KAAvB,CAAL,CAHF,CADQ;AAAA,GADT,CADH,CARF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,CADa;AAAA,CAAf;;AA6BA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMd,OAAO,GAAGa,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoB,UAAAhB,OAAO;AAAA,WAAIA,OAAO,CAACiB,EAAR,KAAe,CAACH,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBC,SAA1C;AAAA,GAA3B,CAAhB;;AAEA,MAAIpB,OAAJ,EAAa;AACX,WAAO;AAAEA,MAAAA,OAAO,EAAPA;AAAF,KAAP;AACD,GAFD,MAEO;AACL,WAAO;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAP;AACD;AACF,CARD;;AAUA,eAAeF,OAAO,CAACc,eAAD,CAAP,CAAyBb,MAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nconst Result = ({ project }) =>\n  <div>\n    <h1>Results</h1>\n    <p>Passage: {project.text}</p>\n    <h4>Summary</h4>\n    <ol>\n      {project.result.document_tone.tones.map(tone => <li><em>{tone.tone_name}</em><p> Score: {tone.score}</p></li>)}\n    </ol>\n    <h4>Detailed Analysis</h4>\n    <ul>\n      {project.result.sentences_tone.map(\n        sentence =>\n        <div>\n          <li><em>Sentence {sentence.sentence_id + 1}: {sentence.text}</em>\n          </li>\n          <ol>{sentence.tones.map(tone =>\n            <li><em>{tone.tone_name}</em>\n              <p>Score: {tone.score}</p>\n            </li>\n          )}\n        </ol>\n      </div>\n        )}\n    </ul>\n    <button>\n      Save\n    </button>\n  </div>\n\nconst mapStateToProps = (state, ownProps) => {\n  const project = state.projects.find(project => project.id === +ownProps.match.params.projectId)\n\n  if (project) {\n    return { project }\n  } else {\n    return { project: {} }\n  }\n}\n\nexport default connect(mapStateToProps)(Result);\n"]},"metadata":{},"sourceType":"module"}