{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Components/Result.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar Result = function Result(_ref) {\n  var project = _ref.project;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Results\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Passage: \", project.text), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Tone: \", project.result.document_tone.tones[0].tone_name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Score: \", project.result.document_tone.tones[0].score));\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var project = state.projects.find(function (project) {\n    return project.id === +ownProps.match.params.projectId;\n  });\n\n  if (project) {\n    return {\n      project: project\n    };\n  } else {\n    return {\n      project: {}\n    };\n  }\n};\n\nexport default connect(mapStateToProps)(Result);","map":{"version":3,"sources":["/Users/sebastiangertz/.atom/.learn-ide/home/scirocco21/doublecheck/src/Components/Result.js"],"names":["React","Component","connect","Result","project","text","result","document_tone","tones","tone_name","score","mapStateToProps","state","ownProps","projects","find","id","match","params","projectId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,OAAO,CAACC,IAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUD,OAAO,CAACE,MAAR,CAAeC,aAAf,CAA6BC,KAA7B,CAAmC,CAAnC,EAAsCC,SAAhD,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWL,OAAO,CAACE,MAAR,CAAeC,aAAf,CAA6BC,KAA7B,CAAmC,CAAnC,EAAsCE,KAAjD,CAJF,CADa;AAAA,CAAf;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMT,OAAO,GAAGQ,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoB,UAAAX,OAAO;AAAA,WAAIA,OAAO,CAACY,EAAR,KAAe,CAACH,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBC,SAA1C;AAAA,GAA3B,CAAhB;;AAEA,MAAIf,OAAJ,EAAa;AACX,WAAO;AAAEA,MAAAA,OAAO,EAAPA;AAAF,KAAP;AACD,GAFD,MAEO;AACL,WAAO;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAP;AACD;AACF,CARD;;AAUA,eAAeF,OAAO,CAACS,eAAD,CAAP,CAAyBR,MAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nconst Result = ({ project }) =>\n  <div>\n    <h1>Results</h1>\n    <p>Passage: {project.text}</p>\n    <p>Tone: {project.result.document_tone.tones[0].tone_name}</p>\n    <p>Score: {project.result.document_tone.tones[0].score}</p>\n  </div>\n\nconst mapStateToProps = (state, ownProps) => {\n  const project = state.projects.find(project => project.id === +ownProps.match.params.projectId)\n\n  if (project) {\n    return { project }\n  } else {\n    return { project: {} }\n  }\n}\n\nexport default connect(mapStateToProps)(Result);\n"]},"metadata":{},"sourceType":"module"}