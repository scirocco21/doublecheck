{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/TOSHIBAEXT/doublecheck-react-app/client/src/Containers/TextForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport { addProject as _addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\nimport { imageMapper } from '../imageMapper.js';\n\nvar TextForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextForm, _Component);\n\n  function TextForm() {\n    var _this;\n\n    _classCallCheck(this, TextForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextForm).call(this));\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n\n      _this.redirect(_this.state);\n    };\n\n    _this.handleOnChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      title: \"\",\n      text: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TextForm, [{\n    key: \"updateProject\",\n    value: function updateProject(result) {\n      var updatedProject = Object.assign({}, {\n        text: this.state.text,\n        title: this.state.title\n      }, {\n        title: this.state.title || this.props.defaultTitle,\n        img: imageMapper(),\n        tones: result.document_tone.tones,\n        sentences: result.sentences_tone\n      });\n      return this.props.addProject(updatedProject);\n    }\n  }, {\n    key: \"redirect\",\n    value: function () {\n      var _redirect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(project) {\n        var _this2 = this;\n\n        var action;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return toneAnalyzer(project).then(function (result) {\n                  return _this2.updateProject(result);\n                });\n\n              case 2:\n                action = _context.sent;\n                this.props.history.push(\"/projects/\".concat(action.project.idx, \"/result\"));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function redirect(_x) {\n        return _redirect.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        style: {\n          marginTop: '16px'\n        },\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"title\",\n        name: \"title\",\n        placeholder: this.props.defaultTitle,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"text\",\n        cols: \"40\",\n        rows: \"5\",\n        onChange: this.handleOnChange,\n        placeholder: \"Paste text here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return TextForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projects: state.projects\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch(_addProject(project));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TextForm));","map":{"version":3,"sources":["/Volumes/TOSHIBAEXT/doublecheck-react-app/client/src/Containers/TextForm.js"],"names":["React","Component","withRouter","connect","Form","FormGroup","Input","Button","addProject","toneAnalyzer","imageMapper","TextForm","handleOnSubmit","event","preventDefault","redirect","state","handleOnChange","setState","target","name","value","title","text","result","updatedProject","Object","assign","props","defaultTitle","img","tones","document_tone","sentences","sentences_tone","project","then","updateProject","action","history","push","idx","marginTop","mapStateToProps","projects","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport {Form, FormGroup, Input, Button} from 'reactstrap'\nimport { addProject } from '../Actions/index.js';\nimport { toneAnalyzer } from '../tone.js';\nimport { imageMapper } from '../imageMapper.js'\n\nclass TextForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n        title: \"\",\n        text: \"\",\n      }\n    }\n\n  updateProject(result) {\n    let updatedProject = Object.assign({}, {text: this.state.text, title: this.state.title}, {\n      title: this.state.title || this.props.defaultTitle,\n      img: imageMapper(),\n      tones: result.document_tone.tones,\n      sentences: result.sentences_tone\n    });\n    return this.props.addProject(updatedProject)\n  }\n\n  async redirect(project) {\n    // wait until project is updated and added to Redux store before redirecting\n    let action = await toneAnalyzer(project).then(result => this.updateProject(result))\n    this.props.history.push(`/projects/${action.project.idx}/result`)\n  }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    this.redirect(this.state)\n  }\n\n  handleOnChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Form style={{ marginTop: '16px' }} onSubmit={this.handleOnSubmit} >\n        <FormGroup>\n          <Input type=\"title\" name=\"title\" placeholder={this.props.defaultTitle} onChange={this.handleOnChange}/>\n        </FormGroup>\n        <FormGroup>\n          <Input type=\"textarea\" name=\"text\" cols=\"40\" rows=\"5\"\n            onChange={this.handleOnChange}\n            placeholder=\"Paste text here\">\n          </Input><br/>\n      </FormGroup>\n          <Button type=\"submit\" value=\"Submit\">Submit</Button>\n      </Form>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TextForm))\n"]},"metadata":{},"sourceType":"module"}